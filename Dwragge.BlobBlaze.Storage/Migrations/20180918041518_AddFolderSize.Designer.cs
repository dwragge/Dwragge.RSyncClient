// <auto-generated />
using System;
using Dwragge.BlobBlaze.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dwragge.BlobBlaze.Storage.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20180918041518_AddFolderSize")]
    partial class AddFolderSize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.BackupFolder", b =>
                {
                    b.Property<int>("BackupFolderId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BackupRemoteId");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<bool>("RealTimeUpdates");

                    b.Property<string>("RemoteBaseFolder");

                    b.Property<long>("Size");

                    b.Property<string>("SyncTime")
                        .IsRequired();

                    b.Property<TimeSpan>("SyncTimeSpan");

                    b.HasKey("BackupFolderId");

                    b.HasIndex("BackupRemoteId");

                    b.ToTable("BackupFolders");
                });

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.BackupFolderJob", b =>
                {
                    b.Property<int>("BackupFolderJobId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BackupFolderId");

                    b.Property<DateTime>("Created");

                    b.Property<int>("NumFiles");

                    b.Property<int>("Status");

                    b.HasKey("BackupFolderJobId");

                    b.HasIndex("BackupFolderId");

                    b.ToTable("BackupJobs");
                });

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.BackupRemote", b =>
                {
                    b.Property<int>("BackupRemoteId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BaseFolder");

                    b.Property<string>("ConnectionString");

                    b.Property<bool>("Default");

                    b.Property<string>("Name");

                    b.HasKey("BackupRemoteId");

                    b.ToTable("BackupRemotes");
                });

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.TrackedFile", b =>
                {
                    b.Property<int>("TrackedFileId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BackupFolderId");

                    b.Property<string>("FileName");

                    b.Property<DateTime>("FirstTracked");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("RemoteLocation");

                    b.Property<long>("SizeBytes");

                    b.HasKey("TrackedFileId");

                    b.HasIndex("BackupFolderId");

                    b.HasIndex("FileName")
                        .IsUnique();

                    b.ToTable("TrackedFiles");
                });

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.TrackedFileVersion", b =>
                {
                    b.Property<int>("TrackedFileVersionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RemoteLocation");

                    b.Property<int>("TrackedFileId");

                    b.Property<DateTime>("VersionedAt");

                    b.HasKey("TrackedFileVersionId");

                    b.HasIndex("TrackedFileId");

                    b.ToTable("TrackedFileVersions");
                });

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.BackupFolder", b =>
                {
                    b.HasOne("Dwragge.BlobBlaze.Entities.BackupRemote", "Remote")
                        .WithMany()
                        .HasForeignKey("BackupRemoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.BackupFolderJob", b =>
                {
                    b.HasOne("Dwragge.BlobBlaze.Entities.BackupFolder", "Folder")
                        .WithMany()
                        .HasForeignKey("BackupFolderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.TrackedFile", b =>
                {
                    b.HasOne("Dwragge.BlobBlaze.Entities.BackupFolder", "BackupFolder")
                        .WithMany()
                        .HasForeignKey("BackupFolderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dwragge.BlobBlaze.Entities.TrackedFileVersion", b =>
                {
                    b.HasOne("Dwragge.BlobBlaze.Entities.TrackedFile", "File")
                        .WithMany("Versions")
                        .HasForeignKey("TrackedFileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
